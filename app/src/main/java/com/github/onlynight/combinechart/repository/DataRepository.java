package com.github.onlynight.combinechart.repository;

import android.graphics.Color;
import android.text.TextUtils;

import com.github.onlynight.chartlibrary.data.entity.BarEntity;
import com.github.onlynight.chartlibrary.data.entity.CandleStickEntity;
import com.github.onlynight.chartlibrary.data.entity.LineEntity;

import org.json.JSONArray;
import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

/**
 * Created by lion on 2017/8/21.
 */

public class DataRepository {

    private static final String KLINE_JSON = "{\"code\":\"00000\",\"data\":{\"exchangeCode\":\"zec_btc\",\"high\":0.069499990000,\"kai\":0.054367520000,\"low\":0.054367520000,\"rightCoinRate\":\"28933.61875364\",\"rose\":-2.73,\"rows\":[[1503705600000,0.054695360000,0.054700000000,0.054367520000,0.054422670000,122.5830],[1503707400000,0.054599430000,0.054944000000,0.054368380000,0.054671310000,94.9550],[1503709200000,0.054671310000,0.055300130000,0.054671310000,0.055300130000,190.3550],[1503711000000,0.055023740000,0.055598990000,0.055023740000,0.055400510000,150.7520],[1503712800000,0.055400510000,0.055977890000,0.055062140000,0.055172340000,129.8980],[1503714600000,0.055062140000,0.056279050000,0.054517160000,0.055725980000,116.0710],[1503716400000,0.056000040000,0.056629720000,0.056000040000,0.056417090000,103.0080],[1503718200000,0.056461580000,0.057574550000,0.056417140000,0.057269680000,94.1460],[1503720000000,0.057269700000,0.057499860000,0.056956010000,0.057110990000,116.1000],[1503721800000,0.057218230000,0.057499990000,0.056969510000,0.057499970000,112.4900],[1503723600000,0.056971020000,0.058303230000,0.056971020000,0.057980120000,147.0650],[1503725400000,0.057797300000,0.058200630000,0.057449590000,0.057805940000,116.4160],[1503727200000,0.057806140000,0.058343790000,0.057649960000,0.057866080000,141.2360],[1503729000000,0.058099990000,0.059702760000,0.058099980000,0.059226420000,131.4230],[1503730800000,0.059702760000,0.060999970000,0.059416990000,0.059660440000,137.5320],[1503732600000,0.059499990000,0.061999990000,0.059499990000,0.061600080000,108.2110],[1503734400000,0.061600140000,0.061849810000,0.059788410000,0.061099600000,138.7220],[1503736200000,0.060699840000,0.062039990000,0.060543480000,0.061700030000,148.6060],[1503738000000,0.062039990000,0.064765420000,0.062039990000,0.064250490000,98.5210],[1503739800000,0.064450220000,0.064652470000,0.064149310000,0.064400100000,104.0380],[1503741600000,0.064390050000,0.065314730000,0.064390000000,0.065000080000,116.2860],[1503743400000,0.064510860000,0.065062310000,0.062216380000,0.062324030000,113.5590],[1503745200000,0.062216380000,0.062216380000,0.060938650000,0.061440000000,99.2570],[1503747000000,0.061792990000,0.063514110000,0.061792990000,0.062300050000,168.6890],[1503748800000,0.061963520000,0.063000100000,0.061699990000,0.062640370000,125.4670],[1503750600000,0.062567930000,0.064999980000,0.062567930000,0.064300030000,126.4230],[1503752400000,0.064302720000,0.067999980000,0.064200260000,0.067999980000,105.6780],[1503754200000,0.067699140000,0.067932970000,0.064461880000,0.065009980000,141.6930],[1503756000000,0.064752750000,0.064999990000,0.063400040000,0.063400050000,134.3290],[1503757800000,0.063499990000,0.066499770000,0.063498980000,0.066300100000,112.5400],[1503759600000,0.066342940000,0.066749660000,0.064300130000,0.064715480000,144.0630],[1503761400000,0.064715490000,0.064759570000,0.064428110000,0.064738750000,117.9390],[1503763200000,0.064479040000,0.064479040000,0.063723760000,0.064209060000,152.4260],[1503765000000,0.064209060000,0.064835240000,0.064209060000,0.064266050000,187.9250],[1503766800000,0.064605960000,0.066506680000,0.064266050000,0.066442640000,143.9330],[1503768600000,0.066506660000,0.066506660000,0.064682310000,0.064696230000,123.8250],[1503770400000,0.064696260000,0.065583180000,0.064696260000,0.065481960000,115.8450],[1503772200000,0.065481960000,0.065582660000,0.065162320000,0.065262840000,121.0400],[1503774000000,0.065162320000,0.065262770000,0.064000000000,0.064265990000,163.4520],[1503775800000,0.064234170000,0.064804230000,0.063920110000,0.064717360000,129.3080],[1503777600000,0.064099900000,0.064632640000,0.063800290000,0.064520470000,175.0620],[1503779400000,0.064569990000,0.064813860000,0.064138530000,0.064489770000,129.9430],[1503781200000,0.064799960000,0.064881460000,0.064411190000,0.064411300000,118.8270],[1503783000000,0.064699600000,0.064699600000,0.064138430000,0.064138430000,95.5320],[1503784800000,0.064138430000,0.064879010000,0.063715370000,0.063754230000,132.2700],[1503786600000,0.063719600000,0.064799990000,0.063639670000,0.064550020000,118.3590],[1503788400000,0.064549990000,0.065899940000,0.064549990000,0.065879890000,111.0620],[1503790200000,0.065879890000,0.069499990000,0.065800120000,0.069056800000,118.6830],[1503792000000,0.068942810000,0.068999980000,0.066460260000,0.066699010000,117.1010],[1503793800000,0.066511170000,0.067752080000,0.065348130000,0.067751980000,114.2690],[1503795600000,0.067425640000,0.067473980000,0.065854960000,0.066000000000,153.7890],[1503797400000,0.065854960000,0.065985180000,0.064799980000,0.064930130000,175.9650],[1503799200000,0.064800530000,0.064999990000,0.064249990000,0.064340180000,134.0300],[1503801000000,0.064499990000,0.066920980000,0.064249990000,0.065621040000,164.4440],[1503802800000,0.065621080000,0.066199940000,0.064587590000,0.064587590000,146.2500],[1503804600000,0.064658330000,0.064800000000,0.064143360000,0.064295960000,169.7860],[1503806400000,0.064456890000,0.064457050000,0.064100010000,0.064100010000,137.2860],[1503808200000,0.064100010000,0.064516020000,0.064099990000,0.064430060000,106.2270],[1503810000000,0.064430060000,0.064928410000,0.064210240000,0.064429880000,107.2820],[1503811800000,0.064500020000,0.065442080000,0.064386760000,0.065442080000,105.7260],[1503813600000,0.065442080000,0.065569420000,0.064456040000,0.064835010000,109.4820],[1503815400000,0.064456050000,0.065299920000,0.064100210000,0.064234440000,146.0210],[1503817200000,0.064463830000,0.064499990000,0.064156620000,0.064163940000,169.6800],[1503819000000,0.064499990000,0.064594710000,0.064275440000,0.064275600000,156.5780],[1503820800000,0.064275600000,0.064500000000,0.064210090000,0.064239610000,115.3390],[1503822600000,0.064239610000,0.064801540000,0.064100000000,0.064429310000,134.6420],[1503824400000,0.064429310000,0.064459970000,0.064100000000,0.064100000000,101.0540],[1503826200000,0.064100000000,0.064306490000,0.064099990000,0.064100000000,123.0220],[1503828000000,0.064100000000,0.064928960000,0.064100000000,0.064593580000,169.9300],[1503829800000,0.064899490000,0.064899490000,0.064099990000,0.064109990000,138.7830],[1503831600000,0.064121060000,0.064729990000,0.064000000000,0.064111040000,95.4990],[1503833400000,0.064111040000,0.064158510000,0.062200000000,0.062860980000,175.7180],[1503835200000,0.062861270000,0.063004300000,0.062393320000,0.062393320000,90.2550],[1503837000000,0.062486620000,0.063348370000,0.062000000000,0.062981080000,149.1210],[1503838800000,0.063041480000,0.063435040000,0.062656920000,0.062656920000,141.8560],[1503840600000,0.062656920000,0.062848620000,0.062156780000,0.062223510000,106.3900],[1503842400000,0.062223490000,0.062843450000,0.062107120000,0.062741090000,128.2370],[1503844200000,0.062510280000,0.062741110000,0.062510170000,0.062510180000,86.7370],[1503846000000,0.062510180000,0.062639980000,0.062068200000,0.062099980000,128.2330],[1503847800000,0.062068200000,0.062301240000,0.061894850000,0.061899920000,127.3360],[1503849600000,0.061894850000,0.062272610000,0.061894850000,0.061920760000,61.8320],[1503851400000,0.061920760000,0.061920760000,0.061399620000,0.061399620000,6.9800],[1503853200000,0.061399620000,0.062199990000,0.061057540000,0.061760610000,104.4090],[1503855000000,0.061760610000,0.062496880000,0.061699990000,0.062496790000,112.9150],[1503856800000,0.062496790000,0.063655990000,0.062246600000,0.063499990000,83.5240],[1503858600000,0.063499990000,0.064105610000,0.063400010000,0.063785340000,113.4050],[1503860400000,0.063785340000,0.063999630000,0.063545070000,0.063796180000,108.0240],[1503862200000,0.063796180000,0.063999990000,0.063545360000,0.063546930000,125.2100],[1503864000000,0.063546930000,0.063716720000,0.063162000000,0.063162000000,125.2600],[1503865800000,0.063162000000,0.063200070000,0.062500200000,0.062781320000,116.8700],[1503867600000,0.062781320000,0.063230320000,0.062499990000,0.063199000000,153.9680],[1503869400000,0.063199000000,0.063692520000,0.062989720000,0.063096420000,114.8150],[1503871200000,0.063096420000,0.064034170000,0.063096420000,0.063156580000,139.9020],[1503873000000,0.063156580000,0.063986210000,0.063150600000,0.063283050000,157.6040],[1503874800000,0.063283050000,0.063914580000,0.063283050000,0.063700160000,179.5900],[1503876600000,0.063700160000,0.064059650000,0.063150610000,0.063150610000,142.2000],[1503878400000,0.063150610000,0.063599870000,0.062797630000,0.062800940000,132.3380],[1503880200000,0.062800940000,0.063425720000,0.062495280000,0.062650070000,167.2230],[1503882000000,0.062650070000,0.063417390000,0.062339080000,0.062838540000,145.6420],[1503883800000,0.062838540000,0.062838540000,0.061949990000,0.062061060000,147.2490],[1503885600000,0.062061060000,0.062474400000,0.062061060000,0.062170940000,190.8060],[1503887400000,0.062170940000,0.062514570000,0.061634020000,0.061999980000,104.9040],[1503889200000,0.061999980000,0.062199970000,0.061515490000,0.061801700000,120.1400],[1503891000000,0.061801700000,0.062656650000,0.061801700000,0.062517990000,179.2970],[1503892800000,0.062517990000,0.063812450000,0.062369320000,0.063408970000,177.7280],[1503894600000,0.063408970000,0.063691400000,0.061833160000,0.061833180000,164.3120],[1503896400000,0.061833180000,0.062280040000,0.061595110000,0.061759650000,113.0900],[1503898200000,0.061759650000,0.061759650000,0.060423470000,0.060423470000,80.7110],[1503900000000,0.060423470000,0.061499560000,0.060229980000,0.060936680000,32.3150],[1503901800000,0.060936680000,0.061899990000,0.060843750000,0.061580000000,160.6800],[1503903600000,0.061580000000,0.061916900000,0.060882520000,0.060999900000,168.8380],[1503905400000,0.060999900000,0.061299990000,0.060882580000,0.061108000000,187.4950],[1503907200000,0.061108000000,0.061686740000,0.061010100000,0.061010100000,134.8570],[1503909000000,0.061010100000,0.061121100000,0.060843560000,0.060850050000,176.2610],[1503910800000,0.060850050000,0.061287600000,0.060850050000,0.061099990000,152.3370],[1503912600000,0.061099990000,0.061161090000,0.060826430000,0.060839970000,185.3060],[1503914400000,0.060839970000,0.061287460000,0.060800020000,0.061286490000,160.8430],[1503916200000,0.061286490000,0.061286490000,0.061049800000,0.061049800000,154.2370],[1503918000000,0.061049800000,0.061780900000,0.060801020000,0.061780900000,139.7120],[1503919800000,0.061780900000,0.062477940000,0.060899990000,0.061615340000,147.5600],[1503921600000,0.061615340000,0.062109740000,0.060800050000,0.062109740000,171.0880],[1503923400000,0.062109740000,0.062110100000,0.061600070000,0.062013230000,119.7300],[1503925200000,0.062013230000,0.063379990000,0.061520320000,0.063333350000,163.5320],[1503927000000,0.063333350000,0.064039820000,0.063070850000,0.063999970000,159.4630],[1503928800000,0.063999970000,0.064199960000,0.063919170000,0.064189920000,140.3770],[1503930600000,0.064189920000,0.065310430000,0.064189920000,0.064717310000,119.4930],[1503932400000,0.064717310000,0.064795340000,0.064334040000,0.064399990000,157.3800],[1503934200000,0.064399990000,0.064399990000,0.064099740000,0.064179950000,180.4940],[1503936000000,0.064179950000,0.064509890000,0.063934990000,0.064125890000,164.6630],[1503937800000,0.064125890000,0.064125890000,0.062116150000,0.062822710000,135.6000],[1503939600000,0.062822710000,0.063499570000,0.062281300000,0.062481010000,99.8070],[1503941400000,0.062481010000,0.062519990000,0.060961920000,0.062519990000,30.6220],[1503943200000,0.062519990000,0.063724220000,0.062518810000,0.063699990000,123.4220],[1503945000000,0.063699990000,0.063979770000,0.063500150000,0.063798740000,37.2300],[1503946800000,0.063798740000,0.064509890000,0.063798740000,0.064419070000,52.5640],[1503948600000,0.064419070000,0.064499860000,0.064200170000,0.064352290000,41.2390],[1503950400000,0.064352290000,0.064499980000,0.063630010000,0.063630010000,87.1500],[1503952200000,0.063630010000,0.064764980000,0.063630010000,0.064376550000,101.6540],[1503954000000,0.064376550000,0.064664980000,0.064036680000,0.064449270000,125.7190],[1503955800000,0.064449270000,0.064449270000,0.063405760000,0.063469250000,155.9370],[1503957600000,0.063469250000,0.063469250000,0.062650050000,0.062718320000,97.4310],[1503959400000,0.062718320000,0.063009230000,0.062495400000,0.062799990000,123.8500],[1503961200000,0.062799990000,0.063490760000,0.062559750000,0.063489750000,112.7300],[1503963000000,0.063489750000,0.063489750000,0.062999990000,0.062999990000,83.4500],[1503964800000,0.062999990000,0.063279940000,0.062512750000,0.062512750000,100.5540],[1503966600000,0.062512750000,0.062867840000,0.062458590000,0.062687950000,120.9990],[1503968400000,0.062687950000,0.062789750000,0.062353910000,0.062473870000,113.0040],[1503970200000,0.062473870000,0.062699950000,0.062161080000,0.062330750000,108.2610],[1503972000000,0.062330750000,0.062699750000,0.062330750000,0.062699740000,137.0050],[1503973800000,0.062699740000,0.063390820000,0.062410350000,0.062699360000,50.5020]],\"vol\":19156.9500},\"msg\":\"请求成功\"}\n";

    public List<CandleStickEntity> generateCandleStickEntities() {
        List<CandleStickEntity> entities = new ArrayList<>();

        CandleStickEntity entity;
        for (int i = 0; i < 8; i++) {
            entity = new CandleStickEntity();
            entity.setOpen(1);
            entity.setClose(10);
            entity.setLow(0.5);
            entity.setHigh(12);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(10);
            entity.setClose(5);
            entity.setLow(5);
            entity.setHigh(10);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(5);
            entity.setClose(15);
            entity.setLow(2);
            entity.setHigh(18);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(15);
            entity.setClose(10);
            entity.setLow(5);
            entity.setHigh(20);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(10);
            entity.setClose(20);
            entity.setLow(3);
            entity.setHigh(20);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(20);
            entity.setClose(5);
            entity.setLow(1);
            entity.setHigh(20);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(5);
            entity.setClose(16);
            entity.setLow(5);
            entity.setHigh(20);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(15);
            entity.setClose(28);
            entity.setLow(0);
            entity.setHigh(30);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(16);
            entity.setClose(10);
            entity.setLow(5);
            entity.setHigh(17);
            entities.add(entity);

            entity = new CandleStickEntity();
            entity.setOpen(10);
            entity.setClose(15);
            entity.setLow(5);
            entity.setHigh(17);
            entities.add(entity);
        }

        return entities;
    }

    public List<LineEntity> generateCombineLineEntities() {
        List<LineEntity> entities = new ArrayList<>();
        Random random = new Random();
        for (int i = 0; i < 80; i++) {
            LineEntity entity = new LineEntity();
            entity.setX(i);
            entity.setY(Math.abs(random.nextInt() * 100 % 30));
            entities.add(entity);
        }

        return entities;
    }

    public List<BarEntity> generateBarEntities() {
        List<BarEntity> entities = new ArrayList<>();
        Random random = new Random();
        for (int i = 0; i < 80; i++) {
            BarEntity entity = new BarEntity();
            entity.setX(i);
            entity.setY(Math.abs(random.nextInt() * 100 % 30));
            entity.setColor(i % 2 == 0 ? Color.RED : Color.GREEN);
            entities.add(entity);
        }
        return entities;
    }

    public List<CandleStickEntity> createLocalCandleStickData(int size) {
        String json = KLINE_JSON;
        if (TextUtils.isEmpty(json)) {
            return null;
        }

        try {
            JSONObject resp = new JSONObject(json);
            String resultCode = resp.getString("code");

            List<CandleStickEntity> entities = new ArrayList<>();

            if (!TextUtils.isEmpty(resultCode) && resultCode.equals("00000")) {
                String jsonstr = resp.getString("data");
                String rows = new JSONObject(jsonstr).getString("rows");
                JSONArray resultMsg = new JSONArray(rows);

                if (resultMsg.length() != 0) {

                    double open, low, close, high, volume;
                    long time;
                    int blank = 1;
                    for (int i = 0; i < resultMsg.length(); i++) {
                        JSONArray jsondata = resultMsg.getJSONArray(i);

                        time = jsondata.getLong(0) != 0 ? jsondata.getLong(0) : 0;
                        open = jsondata.getDouble(1);
                        high = jsondata.getDouble(2);
                        low = jsondata.getDouble(3);
                        close = jsondata.getDouble(4);
                        volume = jsondata.getDouble(5);

                        if (i % blank == 0) {
                            CandleStickEntity entity = new CandleStickEntity();
                            entity.setTime(time);
                            entity.setOpen(open);
                            entity.setHigh(high);
                            entity.setLow(low);
                            entity.setClose(close);
                            entity.setVol(volume);
                            entities.add(entity);
                        }
                    }

                    if (size <= 0) {
                        return entities;
                    } else {
                        if (entities.size() > size) {
                            entities = entities.subList(entities.size() - size, entities.size());
                        }
                    }

                }
            }

            return entities;
        } catch (Exception e) {
            e.printStackTrace();
        }

        return null;

    }

    public List<CandleStickEntity> createLocalCandleStickData(String json) {
        if (TextUtils.isEmpty(json)) {
            return null;
        }

        try {
            JSONObject resp = new JSONObject(json);
            String resultCode = resp.getString("code");

            List<CandleStickEntity> entities = new ArrayList<>();

            if (!TextUtils.isEmpty(resultCode) && resultCode.equals("00000")) {
                String jsonstr = resp.getString("data");
                String rows = new JSONObject(jsonstr).getString("rows");
                JSONArray resultMsg = new JSONArray(rows);

                if (resultMsg.length() != 0) {

                    double open, low, close, high, volume;
                    long time;
                    int blank = 1;
                    for (int i = 0; i < resultMsg.length(); i++) {
                        JSONArray jsondata = resultMsg.getJSONArray(i);

                        time = jsondata.getLong(0) != 0 ? jsondata.getLong(0) : 0;
                        open = jsondata.getDouble(1);
                        high = jsondata.getDouble(2);
                        low = jsondata.getDouble(3);
                        close = jsondata.getDouble(4);
                        volume = jsondata.getDouble(5);

                        if (i % blank == 0) {
                            CandleStickEntity entity = new CandleStickEntity();
                            entity.setTime(time);
                            entity.setOpen(open);
                            entity.setHigh(high);
                            entity.setLow(low);
                            entity.setClose(close);
                            entity.setVol(volume);
                            entities.add(entity);
                        }
                    }

//                    if (size <= 0) {
//                        return entities;
//                    } else {
//                        if (entities.size() > size) {
//                            entities = entities.subList(entities.size() - size, entities.size());
//                        }
//                    }

                }
            }

            return entities;
        } catch (Exception e) {
            e.printStackTrace();
        }

        return null;

    }

}
